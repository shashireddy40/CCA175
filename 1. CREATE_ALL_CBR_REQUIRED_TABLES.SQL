--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--SCRIPT PURPOSE:
--CREATED BY:  TAFADZWA MASHAMBA (XY58609) AND SHASHI REDDY (XY59387)
--CREATE DATE:
--REVIEWED BY:
--REVIEW DATE:

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Create the database
--CREATE DATABASE CBR_STAGING_AREA;
--CREATE DATABASE CBR_DATA_STORE;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.CBR_OMLACSA_OUTPUT_TBL', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.CBR_OMLACSA_OUTPUT_TBL;
CREATE TABLE CBR_DATA_STORE.DBO.CBR_OMLACSA_OUTPUT_TBL (
CBR_OMLACSA_OUTPUT_ID INT PRIMARY KEY IDENTITY(1,1),
REPORTING_PERIOD     NVARCHAR(50) ,
CATEGORY     NVARCHAR(50) ,
QUESTION     NVARCHAR(100),
ANSWER       FLOAT DEFAULT 0,
SEGMENT_NAME     NVARCHAR(100),
SECTION_NAME     NVARCHAR(50),
CHANNEL_NAME	 NVARCHAR(50),
ENTRY_TYPE     NVARCHAR(100),
CBR_TEMPLATE_TAB        NVARCHAR(100),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--Create staging tables
IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_RMM_VANTAGE_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_RMM_VANTAGE_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_RMM_VANTAGE_CLAIMS (
CBR_RMM_VANTAGE_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
COMPANY_CODE     VARCHAR(50) ,
MASTER_ID     VARCHAR(50) ,
CLM_SEQUENCE_NUMBER     VARCHAR(50),
INSURED_TYPE     VARCHAR(50),
CLAIM_EFF_DATE     VARCHAR(50),
CLAIM_TYPE_MAJOR     VARCHAR(50),
TOTAL_CALC_BEN_AMT     VARCHAR(50),
CVG_INS_TYPE     VARCHAR(50),
CVG_TYPE    VARCHAR(50),
CVG_PLAN_CODE     VARCHAR(50),
CALC_BEN_AMT     VARCHAR(50),
LAST_CLM_PROC_DT  VARCHAR(50),
DATE_PROCESSED     VARCHAR(50),
AUTHOR_CD     VARCHAR(50),
BENEFIT_AMT_PD     VARCHAR(50),
DISBURSEMENT_CD     VARCHAR(50),
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_OMEGA_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_OMEGA_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_OMEGA_CLAIMS (
CBR_PF_GREENLIGHT_OMEGA_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
CLAIM     VARCHAR(50) ,
PRODUCT     VARCHAR(100) ,
SLICE     VARCHAR(100) ,
ORIG_AMOUNT     VARCHAR(100) ,
CONFIRMED     VARCHAR(100) ,
REGISTER_DATE     VARCHAR(100) ,
DECISION_DATE     VARCHAR(100) ,
DECLINE_REASON     VARCHAR(100) ,
STATUS     VARCHAR(100) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())

);

IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PRODUCT_MAPPING', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PRODUCT_MAPPING; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PRODUCT_MAPPING (
CBR_PF_GREENLIGHT_PRODUCT_MAPPING_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_CODES    VARCHAR(100) ,
PRODUCT_NAME     VARCHAR(100) ,
PRODUCT_DESCRIPTION     VARCHAR(100) ,
LEVEL_4     VARCHAR(100) ,
LEVEL_4_DESCRIPTION     VARCHAR(100) ,
LEVEL_3     VARCHAR(100) ,
LEVEL_2     VARCHAR(100) ,
LEVEL_1     VARCHAR(100) ,
LEVEL_5     VARCHAR(100) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS (
CBR_PF_FLEXI_CONV_DEATH_PAID_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
POLICY_NUMBER	 VARCHAR(50),
CLAIM_AMOUNT	VARCHAR(100),
PAYMENT_DATE	VARCHAR(50),
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PAID_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PAID_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_GREENLIGHT_PAID_CLAIMS (
CBR_PF_GREENLIGHT_PAID_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
POLICY_NUMBER	 VARCHAR(50),
PRODUCT_CODE	 VARCHAR(50),
CLAIM_AMOUNT	 VARCHAR(100),
PAYMENT_DATE	 VARCHAR(50),
STANDALONE_ACCEL   VARCHAR(50),
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS 
(
CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_NAME     VARCHAR(100) ,
PRODUCT_TYPE     VARCHAR(50) ,
PRODUCT_CATEGORY     VARCHAR(50) ,
BULLETIN_FILE_NAME VARCHAR(50),
CELL_REF_BULLETIN_FILE VARCHAR(50),
REPORTING_PERIOD     VARCHAR(50) ,
TOTAL_VALUE VARCHAR(100),
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS (
CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_NAME     VARCHAR(50) ,
TOTAL_VALUE VARCHAR(100),
REPORTING_PERIOD     VARCHAR(50) ,
STATUS     VARCHAR(50) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_DIRECTLIFE_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_DIRECTLIFE_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_DIRECTLIFE_CLAIMS (
CBR_DIRECTLIFE_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_NAME     VARCHAR(50) ,
TOTAL_VALUE VARCHAR(100),
REPORTING_PERIOD     VARCHAR(50),
AGGREGATION     VARCHAR(50),
STATUS          VARCHAR(50) ,
INDICATOR      VARCHAR(50) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_FOUNDATION_MARKET_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_FOUNDATION_MARKET_CLAIMS; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_FOUNDATION_MARKET_CLAIMS (
CBR_FOUNDATION_MARKET_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_NAME     VARCHAR(50) ,
TOTAL_VALUE VARCHAR(100),
REPORTING_PERIOD     VARCHAR(50),
AGGREGATION     VARCHAR(50),
STATUS          VARCHAR(50) ,
INDICATOR      VARCHAR(50) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_COMBINED_POLICY_SPLIT', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_COMBINED_POLICY_SPLIT; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_PF_FLEX_CONV_COMBINED_POLICY_SPLIT (
CBR_PF_FLEX_CONV_COMBINED_POLICY_SPLIT_ID INT PRIMARY KEY IDENTITY(1,1),
POLICY_TYPE    VARCHAR(50) ,
POLICY_TYPE_DESCRIPTION     VARCHAR(50) ,
AGGREGATION     VARCHAR(50) ,
PERCENT_VALUE   INT,
REPORTING_PERIOD     VARCHAR(50) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate()) 
);

IF OBJECT_ID('CBR_STAGING_AREA.DBO.STG_CBR_MASTER_PRODUCT_MAPPING', 'U') IS NOT NULL  
	DROP TABLE CBR_STAGING_AREA.DBO.STG_CBR_MASTER_PRODUCT_MAPPING; 
CREATE TABLE CBR_STAGING_AREA.DBO.STG_CBR_MASTER_PRODUCT_MAPPING (
CBR_MASTER_PRODUCT_MAPPING_ID INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_CODES    VARCHAR(100) ,
PRODUCT_NAME     VARCHAR(100) ,
PRODUCT_DESCRIPTION     VARCHAR(100) ,
LEVEL_4     VARCHAR(100) ,
LEVEL_4_DESCRIPTION     VARCHAR(100) ,
LEVEL_3     VARCHAR(100) ,
LEVEL_2     VARCHAR(100) ,
LEVEL_1     VARCHAR(100) ,
LEVEL_5     VARCHAR(100) ,
ENTRY_TYPE     VARCHAR(100) ,
DB_INSERT_DATE  DATETIME DEFAULT (getdate())
);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------

--CREATE AUDIT_HISTORY TABLE

IF OBJECT_ID('CBR_DATA_STORE.DBO.AUDIT_HISTORY', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.AUDIT_HISTORY; 
CREATE TABLE CBR_DATA_STORE.DBO.AUDIT_HISTORY
(
	IDENTIFIER UNIQUEIDENTIFIER DEFAULT NEWID() ,
	REPORTING_PERIOD VARCHAR(10),
	SOURCE_TYPE VARCHAR(50) DEFAULT 'FILE' ,-- F - file, T - DB Table
	SOURCE_NAME VARCHAR(150),
    PROCESSED_ROW_COUNT INT,
	DESTINATION_TYPE  VARCHAR(50) DEFAULT 'DATABASE TABLE',-- F - file, T - DB Table
	DESTINATION_NAME  VARCHAR(150),
	EVENT VARCHAR(50),
	PROCESS_DESCRIPTION VARCHAR(300),
	USER_NAME VARCHAR(50),
	CREATE_DATE DATETIME DEFAULT getdate()
	
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR RMM CLAIMS
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_CLAIMS (
TRANS_CBR_RMM_VANTAGE_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('RMM CLAIMS'),
PRODUCT_NAME     VARCHAR(100),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('RETAIL MASS MARKET'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP A (MFC)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR RMM REPORTED CLAIMS
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_REPORTED_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_REPORTED_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_RMM_VANTAGE_REPORTED_CLAIMS (
TRANS_CBR_RMM_VANTAGE_REPORTED_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('RMM REPORTED CLAIMS'),
PRODUCT_NAME     VARCHAR(100),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('RETAIL MASS MARKET'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP A (MFC)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE    DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF GREENLIGHT CLAIMS ( FOR REPUDIATED, OUTSTANDING, ONLY PAID COUNTS)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_CLAIMS (
TRANS_CBR_PF_GREENLIGHT_OMEGA_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('PF GREENLIGHT CLAIMS'),
PRODUCT_NAME     VARCHAR(50),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF GREENLIGHT REPORTED CLAIMS
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_REPORTED_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_REPORTED_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_OMEGA_REPORTED_CLAIMS (
TRANS_CBR_PF_GREENLIGHT_OMEGA_REPORTED_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('PF GREENLIGHT REPORTED CLAIMS'),
PRODUCT_NAME     VARCHAR(50),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF GREENLIGHT PAID CLAIMS  ( FOR ONLY PAID VALUES)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_PAID_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_PAID_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_GREENLIGHT_PAID_CLAIMS (
TRANS_CBR_PF_GREENLIGHT_PAID_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('PF GREENLIGHT PAID CLAIMS'),
PRODUCT_NAME     VARCHAR(50),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR FLEXI AND CONV DEATH ASASI CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS (
TRANS_CBR_PF_FLEXI_CONV_DEATH_ASASI_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE     NVARCHAR(50) DEFAULT('PF FLEXI AND CONV DEATH CLAIMS'),
PRODUCT_NAME     VARCHAR(50) DEFAULT('ASISA'),
PRODUCT_ID      INT,
DATE_DAY    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('COMBINED POLICIES'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(50) DEFAULT('UNIVERSAL LIFE'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME     NVARCHAR(50) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('TRANSACTIONAL DATA')
);


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR DIRECT LIFE CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_DIRECT_LIFE_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_DIRECT_LIFE_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_DIRECT_LIFE_CLAIMS (
TRANS_CBR_DIRECT_LIFE_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE       NVARCHAR(50) ,
PRODUCT_NAME     VARCHAR(50) DEFAULT('DIRECT LIFE'),
PRODUCT_ID      INT,
DATE_QUARTER	VARCHAR(50), --DATE_HALF_YEAR    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('RISK'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(150) DEFAULT('INDIVIDUAL RISK RATED(L_R_IRR)'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('DIRECT LIFE'),
MARKET_SEGMENT_NAME       NVARCHAR(50) DEFAULT('GROUP A (MFC)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('MANUALLY AGGREGATED DATA')
);


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR FOUNDATION MARKET CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_FOUNDATION_MARKET_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_FOUNDATION_MARKET_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_FOUNDATION_MARKET_CLAIMS (
TRANS_CBR_FOUNDATION_MARKET_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID    VARCHAR(50),
ENTRY_TYPE       NVARCHAR(150) ,
PRODUCT_NAME     VARCHAR(50) DEFAULT('FOUNDATION MARKET'),
PRODUCT_ID      INT,
DATE_QUARTER	VARCHAR(50), --DATE_HALF_YEAR    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('FUNERAL'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(150) DEFAULT('FUNERAL - INDIVIDUAL UNDERWRITTEN ON A GROUP BASIS(L_F_GB)'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(50) DEFAULT('FUNERAL'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('FUNERAL'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('FUNERAL'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('FOUNDATION MARKET'),
MARKET_SEGMENT_NAME       NVARCHAR(50) DEFAULT('GROUP A (MFC)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('MANUALLY AGGREGATED DATA')
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF_FLEXI_CONV_DISABILITY_CLAIMS CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS (
TRANS_CBR_PF_FLEXI_CONV_DISABILITY_CLAIMS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE       NVARCHAR(150) DEFAULT('FLEXI AND CONVENTIONAL DISABILITY CLAIMS'),
PRODUCT_NAME     VARCHAR(150),
PRODUCT_ID      INT,
DATE_QUARTER	VARCHAR(50), --DATE_HALF_YEAR    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('COMBINED POLICIES'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(150) DEFAULT('COMBINED POLICIES(L_CP_FM)'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(150) DEFAULT('WITH DISCRETIONARY PARTICIPATION FEATURES'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME       NVARCHAR(50) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('MANUALLY AGGREGATED DATA')
);

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS (
TRANS_CBR_PF_FLEX_CONV_DEATH_DISABILITY_PAID_BULLETINS_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE       NVARCHAR(150),
PRODUCT_NAME     VARCHAR(150),
PRODUCT_ID      INT,
DATE_QUARTER	VARCHAR(50), --DATE_HALF_YEAR    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('COMBINED POLICIES'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(150) DEFAULT('COMBINED POLICIES(L_CP_FM)'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(150) DEFAULT('WITH DISCRETIONARY PARTICIPATION FEATURES'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('DEATH'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME       NVARCHAR(100) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('MANUALLY AGGREGATED DATA')
);


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE TRANSFORM TABLE FOR PF_FLEX_CONV_DISABILITY_REPUDIATED_AND_REPORTED_VALUES CLAIMS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DISABILITY_REPUDIATED_AND_REPORTED_VALUES', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DISABILITY_REPUDIATED_AND_REPORTED_VALUES; 
CREATE TABLE CBR_DATA_STORE.DBO.TRANSFORM_CBR_PF_FLEX_CONV_DISABILITY_REPUDIATED_AND_REPORTED_VALUES (
TRANS_CBR_PF_FLEX_CONV_DEATH_REPUDIATED_AND_REPORTED_VALUES_ID INT PRIMARY KEY IDENTITY(1,1),
ENTRY_ID     VARCHAR(50) ,
ENTRY_TYPE       NVARCHAR(150) DEFAULT('FLEXI AND CONVENTIONAL CLAIMS DERIVED VALUES'),
PRODUCT_NAME     VARCHAR(150) DEFAULT('OWN/SIMILAR OCCUPATION DISABILITY LS'),
PRODUCT_ID      INT,
DATE_QUARTER	VARCHAR(50), --DATE_HALF_YEAR    VARCHAR(50),
DATE_ID 	INT,
STATUS_NAME     NVARCHAR(50),
STATUS_ID       INT,
REPORTING_LEVEL_1_NAME     NVARCHAR(50) DEFAULT ('COMBINED POLICIES'),
REPORTING_LEVEL_1_ID       INT,
REPORTING_LEVEL_2_NAME    NVARCHAR(150) DEFAULT('COMBINED POLICIES(L_CP_FM)'),
REPORTING_LEVEL_2_ID       INT,
REPORTING_LEVEL_3_NAME     NVARCHAR(150) DEFAULT('WITH DISCRETIONARY PARTICIPATION FEATURES'),
REPORTING_LEVEL_3_ID       INT,
REPORTING_LEVEL_4_NAME     NVARCHAR(50) DEFAULT('OWN/SIMILAR OCCUPATION DISABILITY LS'),
REPORTING_LEVEL_4_ID       INT,
REPORTING_LEVEL_5_NAME     NVARCHAR(50) DEFAULT('OWN/SIMILAR OCCUPATION DISABILITY LS'),
REPORTING_LEVEL_5_ID       INT,
BUSINESS_SEGMENT_NAME     NVARCHAR(50) DEFAULT('PERSONAL FINANCE'),
MARKET_SEGMENT_NAME       NVARCHAR(100) DEFAULT('GROUP B (PF AND CORPORATE)'),
SEGMENT_ID     INT,
SECTION_NAME     NVARCHAR(50) DEFAULT('CLAIMS'),
SECTION_ID     INT,
CHANNEL_NAME     NVARCHAR(50) DEFAULT('UNKNOWN'),
CHANNEL_ID     INT,
ENTRY_VALUE     DECIMAL(17,2),
INPUT_TYPE_ID     INT,
INPUT_TYPE_NAME     VARCHAR(150) DEFAULT ('MANUALLY AGGREGATED DATA')
);


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--CREATE FUCTION TO CALCULATE REPUDIATED VALUE FOR FLEXI AND CONVENTIONAL DISABILITY

USE CBR_DATA_STORE
GO

CREATE FUNCTION [DBO].[UDF_CALCULATE_FLEXI_CONV_REPUDIATED_VALUE](
    @FLEXI_CONV_REPUDIATED_COUNT FLOAT,
    @FLEXI_CONV_PAID_VALUE FLOAT,
	@FLEXI_CONV_DISABILITY_PAID_COUNT FLOAT
)
RETURNS DEC(17,2)
AS 
BEGIN
    RETURN (@FLEXI_CONV_PAID_VALUE * @FLEXI_CONV_REPUDIATED_COUNT) / (@FLEXI_CONV_DISABILITY_PAID_COUNT );
END
GO


--CREATE FUCTION TO CALCULATE REPUDIATED VALUE FOR FLEXI AND CONVENTIONAL DISABILITY

USE CBR_DATA_STORE
GO
CREATE FUNCTION [DBO].[UDF_CALCULATE_FLEXI_CONV_REPORTED_VALUE](
    @FLEXI_CONV_REPUDIATED_VALUE FLOAT,
    @FLEXI_CONV_PAID_VALUE FLOAT
)
RETURNS DEC(17,2)
AS 
BEGIN
    RETURN (@FLEXI_CONV_PAID_VALUE + @FLEXI_CONV_REPUDIATED_VALUE) ;
END
GO


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--DROP FACT TABLE TO ALLOW MODIFY DIMENSION TABLES
IF OBJECT_ID('CBR_DATA_STORE.DBO.FT_OMLACSA', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.FT_OMLACSA; 
	
--CREATE DIMENSION TABLES

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_SECTION', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_SECTION; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_SECTION (
SECTION_ID     INT PRIMARY KEY IDENTITY(1,1),
SECTION_NAME     VARCHAR(150),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_SEGMENT', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_SEGMENT; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_SEGMENT (
SEGMENT_ID     INT PRIMARY KEY IDENTITY(1,1),
SEGMENT_NAME     VARCHAR(150),
SEGMENT_TYPE	 VARCHAR(50),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_DATE', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_DATE; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_DATE (
DATE_ID     INT PRIMARY KEY IDENTITY(1,1),
DATE_DAY     DATE,
DATE_MONTH     INT,
DATE_QUARTER   INT,
DATE_HALF_YEAR     NVARCHAR(50),
DATE_YEAR     INT

);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_PRODUCT', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_PRODUCT; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_PRODUCT (
PRODUCT_ID     INT PRIMARY KEY IDENTITY(1,1),
PRODUCT_NAME     VARCHAR(150),
CREATE_DATE  DATETIME DEFAULT (getdate())
);


IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_STATUS', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_STATUS; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_STATUS (
STATUS_ID     INT PRIMARY KEY IDENTITY(1,1),
STATUS_NAME     NVARCHAR(150),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_CHANNEL', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_CHANNEL; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_CHANNEL (
CHANNEL_ID     INT PRIMARY KEY IDENTITY(1,1),
CHANNEL_NAME     NVARCHAR(150),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_1', 'U') IS NOT NULL 
	 DROP TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_1; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_1 (
REPORTING_LEVEL_1_ID     INT PRIMARY KEY IDENTITY(1,1),
REPORTING_LEVEL_1_NAME     NVARCHAR(150),
REPORTING_LEVEL_1_TYPE     NVARCHAR(50) DEFAULT ('POLICY LEVEL'),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_2', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_2; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_2 (
REPORTING_LEVEL_2_ID     INT PRIMARY KEY IDENTITY(1,1),
REPORTING_LEVEL_2_NAME     NVARCHAR(150),
REPORTING_LEVEL_2_TYPE     NVARCHAR(50) DEFAULT ('POLICY LEVEL'),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_3', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_3; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_3 (
REPORTING_LEVEL_3_ID     INT PRIMARY KEY IDENTITY(1,1),
REPORTING_LEVEL_3_NAME     NVARCHAR(150),
REPORTING_LEVEL_3_TYPE     NVARCHAR(50) DEFAULT ('BENEFIT LEVEL'),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_4', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_4; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_4 (
REPORTING_LEVEL_4_ID     INT PRIMARY KEY IDENTITY(1,1),
REPORTING_LEVEL_4_NAME     NVARCHAR(150),
REPORTING_LEVEL_4_TYPE     NVARCHAR(50) DEFAULT ('BENEFIT LEVEL'),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_5', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_5; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_REPORTING_LEVEL_5 (
REPORTING_LEVEL_5_ID     INT PRIMARY KEY IDENTITY(1,1),
REPORTING_LEVEL_5_NAME     NVARCHAR(150),
REPORTING_LEVEL_5_TYPE     NVARCHAR(50) DEFAULT ('BENEFIT LEVEL'),
CREATE_DATE  DATETIME DEFAULT (getdate())
);

IF OBJECT_ID('CBR_DATA_STORE.DBO.DIM_INPUT_TYPE', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.DIM_INPUT_TYPE; 
CREATE TABLE CBR_DATA_STORE.DBO.DIM_INPUT_TYPE (
INPUT_TYPE_ID     INT PRIMARY KEY IDENTITY(1,1),
INPUT_TYPE_NAME     VARCHAR(150),
CREATE_DATE  DATETIME DEFAULT (getdate())
);


--CREATE FACT TABLE

IF OBJECT_ID('CBR_DATA_STORE.DBO.FT_OMLACSA', 'U') IS NOT NULL  
	DROP TABLE CBR_DATA_STORE.DBO.FT_OMLACSA; 
CREATE TABLE CBR_DATA_STORE.DBO.FT_OMLACSA (
OMLACSA_ID INT PRIMARY KEY IDENTITY(1,1),
SOURCE_ID INT,
ENTRY_ID       VARCHAR(50),
ENTRY_TYPE     NVARCHAR(150),
DATE_ID      INT FOREIGN KEY REFERENCES DIM_DATE(DATE_ID),
REPORTING_LEVEL_1_ID     INT FOREIGN KEY REFERENCES DIM_REPORTING_LEVEL_1(REPORTING_LEVEL_1_ID),
REPORTING_LEVEL_2_ID     INT FOREIGN KEY REFERENCES DIM_REPORTING_LEVEL_2(REPORTING_LEVEL_2_ID),
REPORTING_LEVEL_3_ID     INT FOREIGN KEY REFERENCES DIM_REPORTING_LEVEL_3(REPORTING_LEVEL_3_ID),
REPORTING_LEVEL_4_ID     INT FOREIGN KEY REFERENCES DIM_REPORTING_LEVEL_4(REPORTING_LEVEL_4_ID),
REPORTING_LEVEL_5_ID     INT FOREIGN KEY REFERENCES DIM_REPORTING_LEVEL_5(REPORTING_LEVEL_5_ID),
STATUS_ID      INT FOREIGN KEY REFERENCES DIM_STATUS(STATUS_ID),
PRODUCT_ID     INT FOREIGN KEY REFERENCES DIM_PRODUCT(PRODUCT_ID),
SEGMENT_ID     INT FOREIGN KEY REFERENCES DIM_SEGMENT(SEGMENT_ID),
SECTION_ID     INT FOREIGN KEY REFERENCES DIM_SECTION(SECTION_ID),
CHANNEL_ID     INT FOREIGN KEY REFERENCES DIM_CHANNEL(CHANNEL_ID),
INPUT_TYPE_ID     INT FOREIGN KEY REFERENCES DIM_INPUT_TYPE(INPUT_TYPE_ID),
ENTRY_VALUE   DECIMAL(17,2),
DB_INSERT_DATE  DATETIME DEFAULT (getdate())

);
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--ADD NEW CODE HERE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------THE END-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
